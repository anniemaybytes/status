name: compliance

on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master
        types: [ opened, synchronize, reopened ]

env:
    PHP_VERSION: 8.4
    PHP_EXTENSIONS: apcu, xml, curl, mbstring

jobs:
    backend:
        runs-on: ubuntu-24.04
        steps:
            -   name: Checkout
                uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
            -   name: Prepare environment
                id: ext-cache
                uses: shivammathur/cache-extensions@4595bea7d6630821b0a3a4894f816402faaf324c # v1
                with:
                    php-version: ${{ env.PHP_VERSION }}
                    extensions: ${{ env.PHP_EXTENSIONS }}
                    key: cache-v1
            -   name: Cache extensions
                uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
                with:
                    path: ${{ steps.ext-cache.outputs.dir }}
                    key: ${{ steps.ext-cache.outputs.key }}
                    restore-keys: ${{ steps.ext-cache.outputs.key }}
            -   name: Set up PHP
                uses: shivammathur/setup-php@bf6b4fbd49ca58e4608c9c89fba0b8d90bd2a39f # v2
                with:
                    php-version: ${{ env.PHP_VERSION }}
                    extensions: ${{ env.PHP_EXTENSIONS }}
                    tools: composer
                    coverage: none
                env:
                    fail-fast: true
            -   name: Get composer cache directory
                id: deps-cache
                run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
            -   name: Cache dependencies
                uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
                with:
                    path: ${{ steps.deps-cache.outputs.dir }}
                    key: ${{ runner.os }}-${{ runner.arch }}-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: ${{ runner.os }}-${{ runner.arch }}-composer-
            -   name: Install dependencies
                run: |
                    composer validate --ansi --no-check-all --no-check-publish
                    composer install --no-progress --ansi --prefer-dist
            -   name: Cache linters
                uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
                with:
                    path: |
                        .phpstan-cache
                        .phplint-cache
                        .phpcs-cache
                    key: ${{ runner.os }}-${{ runner.arch }}-linters-${{ forge.run_id }}
                    restore-keys: |
                        ${{ runner.os }}-${{ runner.arch }}-linters-
            -   name: PHPLint
                run: composer phplint
            -   name: PHPStan
                run: composer phpstan
            -   name: PHP_CodeSniffer
                run: composer phpcs
    frontend:
        runs-on: ubuntu-24.04
        steps:
            -   name: Checkout
                uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
            -   name: Set up PNPM package manager
                uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061 # v4
            -   name: Set up NodeJS
                uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6
                with:
                    node-version: 22
                    cache: pnpm
            -   name: Install dependencies
                run: pnpm install
            -   name: ESLint
                run: pnpm lint:eslint
            -   name: Stylelint
                run: pnpm lint:stylelint
            -   name: Prettier
                run: pnpm lint:prettier